swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact:
    name: Contact Email
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: store-rest-controller
    description: Store Rest Controller
  - name: user-rest-controller
    description: User Rest Controller
  - name: product-rest-controller
    description: Product Rest Controller
paths:
  '/product/category/{categoryName}':
    get:
      tags:
        - product-rest-controller
      summary: Search by category
      description: 'Search products by its category name. Case insensive, searches for partial and complete product names.'
      operationId: getProductByCategoryUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: categoryName
          in: path
          description: categoryName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Collection«Product»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/product/name/{productName}':
    get:
      tags:
        - product-rest-controller
      summary: Search by name
      description: 'Search products by name. Case insensive, searches for partial and complete product names.'
      operationId: getProductByNameUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: productName
          in: path
          description: productName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Collection«Product»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/login:
    post:
      tags:
        - user-rest-controller
      summary: Sign in
      description: Authenticate user.
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: password
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/register:
    post:
      tags:
        - user-rest-controller
      summary: Create account
      description: Register a new shopping cart user
      operationId: registerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: password
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/{username}/addcredit/{credit}':
    put:
      tags:
        - user-rest-controller
      summary: Add credit
      description: Add some credit to buy products.
      operationId: creditUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
        - name: credit
          in: path
          description: credit
          required: true
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: number
            format: double
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/{username}/cart':
    get:
      tags:
        - user-rest-controller
      summary: Get cart
      description: "Get user's current cart."
      operationId: getCartUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/{username}/credit':
    get:
      tags:
        - user-rest-controller
      summary: Get credit
      description: "Get user's current credit to buy products."
      operationId: creditUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: number
            format: double
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/{username}/additem':
    post:
      tags:
        - store-rest-controller
      summary: Add item
      description: "Add a new item to user's shopping cart"
      operationId: addItemUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
        - in: body
          name: item
          description: item
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/{username}/checkout':
    put:
      tags:
        - store-rest-controller
      summary: Checkout
      description: Buy the shopping cart
      operationId: checkoutUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/{username}/items':
    get:
      tags:
        - store-rest-controller
      summary: Get items
      description: "Get list of current items on user's shopping cart"
      operationId: getItemsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Item:
    properties:
      product:
        $ref: '#/definitions/Product'
      quantity:
        type: integer
        format: int32
      subtotal:
        type: number
        format: double
  Category:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      urlname:
        type: string
  User:
    properties:
      cart:
        $ref: '#/definitions/Cart'
      credit:
        type: number
        format: double
      password:
        type: string
      username:
        type: string
  Product:
    properties:
      category:
        $ref: '#/definitions/Category'
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: number
        format: double
  Collection«Product»:
    type: object
  Cart:
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Item'
      total:
        type: number
        format: double
      user:
        $ref: '#/definitions/User'
